# Generated by Django 4.2.7 on 2023-11-21 17:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import store.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Created datetime')),
                ('modified_datetime', models.DateTimeField(auto_now=True, verbose_name='Modified datetime')),
            ],
            options={
                'verbose_name': 'Cart',
                'verbose_name_plural': 'Carts',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='Last name')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth date')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='store/profile_images/', verbose_name='Profile image')),
                ('gender', models.CharField(blank=True, choices=[('m', 'Male'), ('f', 'Female')], max_length=1, verbose_name='Gender')),
                ('wallet_amount', models.PositiveIntegerField(default=0, verbose_name='Wallet amount')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='customer', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('p', 'Paid'), ('c', 'Canceled'), ('u', 'Unpaid')], default='u', max_length=1, verbose_name='Status')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Created datetime')),
                ('modified_datetime', models.DateTimeField(auto_now=True, verbose_name='Modified datetime')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='store.customer')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='Last name')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth date')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='store/profile_images/', verbose_name='Profile image')),
                ('gender', models.CharField(blank=True, choices=[('m', 'Male'), ('f', 'Female')], max_length=1, verbose_name='Gender')),
                ('cv', models.FileField(blank=True, null=True, upload_to='store/cv_files/', verbose_name='CV')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='seller', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Seller',
                'verbose_name_plural': 'Sellers',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('price', models.PositiveIntegerField(verbose_name='Price')),
                ('inventory', models.PositiveSmallIntegerField(verbose_name='Inventory')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Created datetime')),
                ('modified_datetime', models.DateTimeField(auto_now=True, verbose_name='Modified datetime')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='store.category', verbose_name='Category')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='store.seller', verbose_name='Seller')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='Title')),
                ('body', models.TextField(verbose_name='Body')),
                ('status', models.CharField(choices=[('w', 'Waiting'), ('a', 'Approved'), ('na', 'Not approved')], default='w', max_length=2, verbose_name='Status')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Created datetime')),
                ('modified_datetime', models.DateTimeField(auto_now=True, verbose_name='Modified datetime')),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'store'), ('model', 'customer')), models.Q(('app_label', 'store'), ('model', 'seller')), _connector='OR'), on_delete=django.db.models.deletion.PROTECT, to='contenttypes.contenttype')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='store.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.cart', verbose_name='Cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='store.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Cart item',
                'verbose_name_plural': 'Cart items',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('province', models.CharField(max_length=255, verbose_name='Province')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('plaque', models.PositiveSmallIntegerField(verbose_name='Plaque')),
                ('postal_code', models.PositiveBigIntegerField(validators=[store.validators.PostalCodeValidator()], verbose_name='Postal code')),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'store'), ('model', 'customer')), models.Q(('app_label', 'store'), ('model', 'seller')), _connector='OR'), on_delete=django.db.models.deletion.PROTECT, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('price', models.PositiveIntegerField(verbose_name='Price')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='store.order', verbose_name='Cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='store.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Order item',
                'verbose_name_plural': 'Order items',
                'unique_together': {('order', 'product')},
            },
        ),
    ]
